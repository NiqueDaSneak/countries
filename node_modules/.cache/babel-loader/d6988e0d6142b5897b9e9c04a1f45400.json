{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/domclemmer/Desktop/countries/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\t\\t\\t{\\n\\t\\t\\t\\tcountries {\\n\\t\\t\\t\\t\\tname\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { ApolloClient, gql } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: 'https://countries.trevorblades.com'\n});\nconst client = new ApolloClient({\n  cache,\n  link\n});\nvar data;\nclient.query({\n  query: gql(_templateObject())\n}).then(result => {\n  data = result.data;\n});\nexport default data;","map":{"version":3,"sources":["/Users/domclemmer/Desktop/countries/src/data/countries.js"],"names":["ApolloClient","gql","InMemoryCache","HttpLink","cache","link","uri","client","data","query","then","result"],"mappings":";;;;;;;;;;;;AAAA,SAAUA,YAAV,EAAwBC,GAAxB,QAAmC,cAAnC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,KAAK,GAAG,IAAIF,aAAJ,EAAd;AACA,MAAMG,IAAI,GAAG,IAAIF,QAAJ,CAAa;AACxBG,EAAAA,GAAG,EAAE;AADmB,CAAb,CAAb;AAIA,MAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC/BI,EAAAA,KAD+B;AAE/BC,EAAAA;AAF+B,CAAjB,CAAf;AAKA,IAAIG,IAAJ;AAEAD,MAAM,CAACE,KAAP,CAAa;AACXA,EAAAA,KAAK,EAAER,GAAF;AADM,CAAb,EASGS,IATH,CASQC,MAAM,IAAI;AACdH,EAAAA,IAAI,GAAGG,MAAM,CAACH,IAAd;AACH,CAXD;AAaA,eAAeA,IAAf","sourcesContent":["import  { ApolloClient, gql } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: 'https://countries.trevorblades.com',\n})\n\nconst client = new ApolloClient({\n\tcache,\n\tlink\n});\n\nvar data;\n\nclient.query({\n\t\tquery: gql\n\t\t`\n\t\t\t{\n\t\t\t\tcountries {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n    `\n}).then(result => {\n    data = result.data\n});\n\nexport default data"]},"metadata":{},"sourceType":"module"}